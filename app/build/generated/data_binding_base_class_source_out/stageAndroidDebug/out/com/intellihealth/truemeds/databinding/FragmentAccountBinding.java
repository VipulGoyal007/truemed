// Generated by data binding compiler. Do not edit!
package com.intellihealth.truemeds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.intellihealth.salt.views.TextView;
import com.intellihealth.salt.views.buttons.Button;
import com.intellihealth.salt.views.buttons.ButtonLite;
import com.intellihealth.truemeds.R;
import com.intellihealth.truemeds.data.model.bottomnav.AccountTabModel;
import com.intellihealth.truemeds.presentation.viewmodel.AccountTabViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentAccountBinding extends ViewDataBinding {
  @NonNull
  public final ButtonLite btnEdit;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final ConstraintLayout btnLogout;

  @NonNull
  public final ButtonLite btnLogoutMain;

  @NonNull
  public final ConstraintLayout btnTnC;

  @NonNull
  public final ButtonLite btnTnCMain;

  @NonNull
  public final ConstraintLayout clTillDateSaving;

  @NonNull
  public final View guideline;

  @NonNull
  public final AppCompatImageView icon;

  @NonNull
  public final AppCompatImageView loggedInUserImage;

  @NonNull
  public final ConstraintLayout login;

  @NonNull
  public final ConstraintLayout mainLayout;

  @NonNull
  public final RecyclerView rcvItem;

  @NonNull
  public final ButtonLite tvAddMore;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPhone;

  @NonNull
  public final TextView tvSaved;

  @NonNull
  public final AppCompatImageView userLogin;

  @NonNull
  public final ConstraintLayout userWithoutLogin;

  @NonNull
  public final ConstraintLayout withLoginUi;

  @Bindable
  protected AccountTabModel mModel;

  @Bindable
  protected AccountTabViewModel mViewmodel;

  @Bindable
  protected Boolean mIsLoggedIn;

  protected FragmentAccountBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ButtonLite btnEdit, Button btnLogin, ConstraintLayout btnLogout, ButtonLite btnLogoutMain,
      ConstraintLayout btnTnC, ButtonLite btnTnCMain, ConstraintLayout clTillDateSaving,
      View guideline, AppCompatImageView icon, AppCompatImageView loggedInUserImage,
      ConstraintLayout login, ConstraintLayout mainLayout, RecyclerView rcvItem,
      ButtonLite tvAddMore, TextView tvEmail, TextView tvName, TextView tvPhone, TextView tvSaved,
      AppCompatImageView userLogin, ConstraintLayout userWithoutLogin,
      ConstraintLayout withLoginUi) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnEdit = btnEdit;
    this.btnLogin = btnLogin;
    this.btnLogout = btnLogout;
    this.btnLogoutMain = btnLogoutMain;
    this.btnTnC = btnTnC;
    this.btnTnCMain = btnTnCMain;
    this.clTillDateSaving = clTillDateSaving;
    this.guideline = guideline;
    this.icon = icon;
    this.loggedInUserImage = loggedInUserImage;
    this.login = login;
    this.mainLayout = mainLayout;
    this.rcvItem = rcvItem;
    this.tvAddMore = tvAddMore;
    this.tvEmail = tvEmail;
    this.tvName = tvName;
    this.tvPhone = tvPhone;
    this.tvSaved = tvSaved;
    this.userLogin = userLogin;
    this.userWithoutLogin = userWithoutLogin;
    this.withLoginUi = withLoginUi;
  }

  public abstract void setModel(@Nullable AccountTabModel model);

  @Nullable
  public AccountTabModel getModel() {
    return mModel;
  }

  public abstract void setViewmodel(@Nullable AccountTabViewModel viewmodel);

  @Nullable
  public AccountTabViewModel getViewmodel() {
    return mViewmodel;
  }

  public abstract void setIsLoggedIn(@Nullable Boolean isLoggedIn);

  @Nullable
  public Boolean getIsLoggedIn() {
    return mIsLoggedIn;
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_account, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentAccountBinding>inflateInternal(inflater, R.layout.fragment_account, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_account, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentAccountBinding>inflateInternal(inflater, R.layout.fragment_account, null, false, component);
  }

  public static FragmentAccountBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentAccountBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentAccountBinding)bind(component, view, R.layout.fragment_account);
  }
}
