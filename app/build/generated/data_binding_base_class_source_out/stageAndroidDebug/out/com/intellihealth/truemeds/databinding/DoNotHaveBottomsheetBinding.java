// Generated by data binding compiler. Do not edit!
package com.intellihealth.truemeds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.intellihealth.salt.views.CheckFieldLayout;
import com.intellihealth.salt.views.TextView;
import com.intellihealth.salt.views.buttons.ButtonLite;
import com.intellihealth.truemeds.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DoNotHaveBottomsheetBinding extends ViewDataBinding {
  @NonNull
  public final CheckFieldLayout customCheckBox;

  @NonNull
  public final ButtonLite goBack;

  @NonNull
  public final AppCompatImageView imageClose;

  @NonNull
  public final AppCompatImageView ivShadow;

  @NonNull
  public final ConstraintLayout prescriptionCardCtl;

  @NonNull
  public final AppCompatImageView prescriptionCardImg;

  @NonNull
  public final TextView prescriptionHeaderTv;

  @NonNull
  public final TextView prescriptionSubHeaderTv;

  @NonNull
  public final TextView tmChip3;

  @NonNull
  public final TextView tvHeader;

  protected DoNotHaveBottomsheetBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CheckFieldLayout customCheckBox, ButtonLite goBack, AppCompatImageView imageClose,
      AppCompatImageView ivShadow, ConstraintLayout prescriptionCardCtl,
      AppCompatImageView prescriptionCardImg, TextView prescriptionHeaderTv,
      TextView prescriptionSubHeaderTv, TextView tmChip3, TextView tvHeader) {
    super(_bindingComponent, _root, _localFieldCount);
    this.customCheckBox = customCheckBox;
    this.goBack = goBack;
    this.imageClose = imageClose;
    this.ivShadow = ivShadow;
    this.prescriptionCardCtl = prescriptionCardCtl;
    this.prescriptionCardImg = prescriptionCardImg;
    this.prescriptionHeaderTv = prescriptionHeaderTv;
    this.prescriptionSubHeaderTv = prescriptionSubHeaderTv;
    this.tmChip3 = tmChip3;
    this.tvHeader = tvHeader;
  }

  @NonNull
  public static DoNotHaveBottomsheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.do_not_have_bottomsheet, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DoNotHaveBottomsheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DoNotHaveBottomsheetBinding>inflateInternal(inflater, R.layout.do_not_have_bottomsheet, root, attachToRoot, component);
  }

  @NonNull
  public static DoNotHaveBottomsheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.do_not_have_bottomsheet, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DoNotHaveBottomsheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DoNotHaveBottomsheetBinding>inflateInternal(inflater, R.layout.do_not_have_bottomsheet, null, false, component);
  }

  public static DoNotHaveBottomsheetBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DoNotHaveBottomsheetBinding bind(@NonNull View view, @Nullable Object component) {
    return (DoNotHaveBottomsheetBinding)bind(component, view, R.layout.do_not_have_bottomsheet);
  }
}
