// Generated by data binding compiler. Do not edit!
package com.intellihealth.truemeds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.intellihealth.salt.views.TextView;
import com.intellihealth.salt.views.buttons.Button;
import com.intellihealth.truemeds.R;
import com.intellihealth.truemeds.data.model.home.PrivacyPolicyBottomSheetModel;
import com.intellihealth.truemeds.presentation.viewmodel.HomeViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class BottomsheetPrivacyPolicyBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout clBody;

  @NonNull
  public final ConstraintLayout clHeader;

  @NonNull
  public final ConstraintLayout clProgress;

  @NonNull
  public final ScrollView scrollableBodyContent;

  @NonNull
  public final Button tvAcceptPrivacy;

  @NonNull
  public final TextView tvBodyContent;

  @NonNull
  public final TextView tvBodyHeader;

  @NonNull
  public final TextView tvHeader;

  @NonNull
  public final View viewDragHandle;

  @Bindable
  protected PrivacyPolicyBottomSheetModel mPrivacyPolicyData;

  @Bindable
  protected HomeViewModel mViewModel;

  protected BottomsheetPrivacyPolicyBinding(Object _bindingComponent, View _root,
      int _localFieldCount, ConstraintLayout clBody, ConstraintLayout clHeader,
      ConstraintLayout clProgress, ScrollView scrollableBodyContent, Button tvAcceptPrivacy,
      TextView tvBodyContent, TextView tvBodyHeader, TextView tvHeader, View viewDragHandle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.clBody = clBody;
    this.clHeader = clHeader;
    this.clProgress = clProgress;
    this.scrollableBodyContent = scrollableBodyContent;
    this.tvAcceptPrivacy = tvAcceptPrivacy;
    this.tvBodyContent = tvBodyContent;
    this.tvBodyHeader = tvBodyHeader;
    this.tvHeader = tvHeader;
    this.viewDragHandle = viewDragHandle;
  }

  public abstract void setPrivacyPolicyData(
      @Nullable PrivacyPolicyBottomSheetModel privacyPolicyData);

  @Nullable
  public PrivacyPolicyBottomSheetModel getPrivacyPolicyData() {
    return mPrivacyPolicyData;
  }

  public abstract void setViewModel(@Nullable HomeViewModel viewModel);

  @Nullable
  public HomeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static BottomsheetPrivacyPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.bottomsheet_privacy_policy, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static BottomsheetPrivacyPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<BottomsheetPrivacyPolicyBinding>inflateInternal(inflater, R.layout.bottomsheet_privacy_policy, root, attachToRoot, component);
  }

  @NonNull
  public static BottomsheetPrivacyPolicyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.bottomsheet_privacy_policy, null, false, component)
   */
  @NonNull
  @Deprecated
  public static BottomsheetPrivacyPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<BottomsheetPrivacyPolicyBinding>inflateInternal(inflater, R.layout.bottomsheet_privacy_policy, null, false, component);
  }

  public static BottomsheetPrivacyPolicyBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static BottomsheetPrivacyPolicyBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (BottomsheetPrivacyPolicyBinding)bind(component, view, R.layout.bottomsheet_privacy_policy);
  }
}
