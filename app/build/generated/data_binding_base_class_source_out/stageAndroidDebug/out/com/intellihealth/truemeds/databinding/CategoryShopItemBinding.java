// Generated by data binding compiler. Do not edit!
package com.intellihealth.truemeds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.intellihealth.salt.views.TextView;
import com.intellihealth.truemeds.R;
import com.intellihealth.truemeds.data.model.home.ChildCategoryModel;
import com.intellihealth.truemeds.presentation.viewmodel.HomeViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class CategoryShopItemBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout abc;

  @NonNull
  public final AppCompatImageView appCompatImageView11;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvDiscount;

  @Bindable
  protected Integer mPosition;

  @Bindable
  protected ChildCategoryModel mItem;

  @Bindable
  protected HomeViewModel mViewModel;

  protected CategoryShopItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout abc, AppCompatImageView appCompatImageView11, TextView tvCategory,
      TextView tvDiscount) {
    super(_bindingComponent, _root, _localFieldCount);
    this.abc = abc;
    this.appCompatImageView11 = appCompatImageView11;
    this.tvCategory = tvCategory;
    this.tvDiscount = tvDiscount;
  }

  public abstract void setPosition(@Nullable Integer position);

  @Nullable
  public Integer getPosition() {
    return mPosition;
  }

  public abstract void setItem(@Nullable ChildCategoryModel item);

  @Nullable
  public ChildCategoryModel getItem() {
    return mItem;
  }

  public abstract void setViewModel(@Nullable HomeViewModel viewModel);

  @Nullable
  public HomeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static CategoryShopItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.category_shop_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static CategoryShopItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<CategoryShopItemBinding>inflateInternal(inflater, R.layout.category_shop_item, root, attachToRoot, component);
  }

  @NonNull
  public static CategoryShopItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.category_shop_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static CategoryShopItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<CategoryShopItemBinding>inflateInternal(inflater, R.layout.category_shop_item, null, false, component);
  }

  public static CategoryShopItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static CategoryShopItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (CategoryShopItemBinding)bind(component, view, R.layout.category_shop_item);
  }
}
