// Generated by data binding compiler. Do not edit!
package com.intellihealth.truemeds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager.widget.ViewPager;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.intellihealth.salt.models.AuthorCardModel;
import com.intellihealth.salt.views.Carts;
import com.intellihealth.salt.views.MobileSectionHeaders;
import com.intellihealth.salt.views.PageIndicator;
import com.intellihealth.salt.views.StickyNonStickyNotification;
import com.intellihealth.salt.views.TextView;
import com.intellihealth.salt.views.alert.Alert;
import com.intellihealth.salt.views.buttons.QuantityStepper;
import com.intellihealth.salt.views.cards.CompositionCard;
import com.intellihealth.salt.views.cards.Divider;
import com.intellihealth.salt.views.cards.Faq;
import com.intellihealth.salt.views.pdp.ViewComparison;
import com.intellihealth.salt.views.section.ProductCardSection;
import com.intellihealth.salt.views.section.RecommendedSubstituteUpsell;
import com.intellihealth.truemeds.R;
import com.intellihealth.truemeds.presentation.viewmodel.ProductDetailViewModel;
import java.lang.Deprecated;
import java.lang.Object;
import java.util.List;

public abstract class FragmentProductDetailBinding extends ViewDataBinding {
  @NonNull
  public final Alert alertMessage;

  @NonNull
  public final StickyNonStickyNotification applyCouponNotification;

  @NonNull
  public final TextView authorCardMainTitle;

  @NonNull
  public final ConstraintLayout authorCardSection;

  @NonNull
  public final TextView availabilityStatus;

  @NonNull
  public final AppCompatImageView bannerPlaceHolder;

  @NonNull
  public final QuantityStepper btnSubsStepper;

  @NonNull
  public final TextView clHeaderLabel;

  @NonNull
  public final TextView clHeaderTitle;

  @NonNull
  public final ConstraintLayout clStepper;

  @NonNull
  public final ConstraintLayout clSubsRecommended;

  @NonNull
  public final ConstraintLayout clTooltipLayout;

  @NonNull
  public final ConstraintLayout clUserBoughtTooltip;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final ProductCardSection doubleStackProductCard;

  @NonNull
  public final Faq faqCategories;

  @NonNull
  public final AppCompatImageView imSubsUserBoughtWithPopup;

  @NonNull
  public final AppCompatImageView imgPolygonWithPopup;

  @NonNull
  public final AppCompatImageView ivBadge;

  @NonNull
  public final AppCompatImageView ivTitleAlreadyAdded;

  @NonNull
  public final LinearLayout llDescrip;

  @NonNull
  public final ConstraintLayout mainLayout;

  @NonNull
  public final Faq manufacturerDetailsCategories;

  @NonNull
  public final TextView medicineCompanyName;

  @NonNull
  public final TextView medicineName;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final ViewPager pdpBanner;

  @NonNull
  public final ConstraintLayout pdpFirstFold;

  @NonNull
  public final MobileSectionHeaders pdpHeader;

  @NonNull
  public final PageIndicator pdpPgIndicator;

  @NonNull
  public final MobileSectionHeaders pdpStickyHeader;

  @NonNull
  public final RecyclerView rvAuthorCard;

  @NonNull
  public final ConstraintLayout scrollLayout;

  @NonNull
  public final ShimmerFrameLayout shimmerViewContainer;

  @NonNull
  public final Carts tmCarts;

  @NonNull
  public final CompositionCard tmCompositionCard;

  @NonNull
  public final Divider tmDivider;

  @NonNull
  public final Divider tmDivider1;

  @NonNull
  public final RecommendedSubstituteUpsell tmRecommendedSubstituteUpsell;

  @NonNull
  public final ViewComparison tmViewComparison;

  @NonNull
  public final ConstraintLayout toolbarLayout;

  @NonNull
  public final TextView tvAlreadyAdded;

  @NonNull
  public final TextView tvCheaperTag;

  @NonNull
  public final TextView tvMRPText;

  @NonNull
  public final TextView tvOrgMedMrp;

  @NonNull
  public final TextView tvOrgMedSellingPrice;

  @NonNull
  public final TextView tvOrgPricePerUnit;

  @NonNull
  public final TextView tvOrgRupeeSbl;

  @NonNull
  public final TextView tvPercentOff;

  @NonNull
  public final TextView tvPricePerUnit;

  @NonNull
  public final AppCompatTextView tvSubsUserBoughtWithPopup;

  @NonNull
  public final View viewLine;

  @NonNull
  public final View viewLinePdp;

  @Bindable
  protected Boolean mIsSubs;

  @Bindable
  protected Boolean mIsSubsFound;

  @Bindable
  protected Boolean mIsBottomsheetBehaviour;

  @Bindable
  protected List<AuthorCardModel> mList;

  @Bindable
  protected ProductDetailViewModel mViewModel;

  protected FragmentProductDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Alert alertMessage, StickyNonStickyNotification applyCouponNotification,
      TextView authorCardMainTitle, ConstraintLayout authorCardSection, TextView availabilityStatus,
      AppCompatImageView bannerPlaceHolder, QuantityStepper btnSubsStepper, TextView clHeaderLabel,
      TextView clHeaderTitle, ConstraintLayout clStepper, ConstraintLayout clSubsRecommended,
      ConstraintLayout clTooltipLayout, ConstraintLayout clUserBoughtTooltip,
      CoordinatorLayout coordinatorLayout, ProductCardSection doubleStackProductCard,
      Faq faqCategories, AppCompatImageView imSubsUserBoughtWithPopup,
      AppCompatImageView imgPolygonWithPopup, AppCompatImageView ivBadge,
      AppCompatImageView ivTitleAlreadyAdded, LinearLayout llDescrip, ConstraintLayout mainLayout,
      Faq manufacturerDetailsCategories, TextView medicineCompanyName, TextView medicineName,
      NestedScrollView nestedScrollView, ViewPager pdpBanner, ConstraintLayout pdpFirstFold,
      MobileSectionHeaders pdpHeader, PageIndicator pdpPgIndicator,
      MobileSectionHeaders pdpStickyHeader, RecyclerView rvAuthorCard,
      ConstraintLayout scrollLayout, ShimmerFrameLayout shimmerViewContainer, Carts tmCarts,
      CompositionCard tmCompositionCard, Divider tmDivider, Divider tmDivider1,
      RecommendedSubstituteUpsell tmRecommendedSubstituteUpsell, ViewComparison tmViewComparison,
      ConstraintLayout toolbarLayout, TextView tvAlreadyAdded, TextView tvCheaperTag,
      TextView tvMRPText, TextView tvOrgMedMrp, TextView tvOrgMedSellingPrice,
      TextView tvOrgPricePerUnit, TextView tvOrgRupeeSbl, TextView tvPercentOff,
      TextView tvPricePerUnit, AppCompatTextView tvSubsUserBoughtWithPopup, View viewLine,
      View viewLinePdp) {
    super(_bindingComponent, _root, _localFieldCount);
    this.alertMessage = alertMessage;
    this.applyCouponNotification = applyCouponNotification;
    this.authorCardMainTitle = authorCardMainTitle;
    this.authorCardSection = authorCardSection;
    this.availabilityStatus = availabilityStatus;
    this.bannerPlaceHolder = bannerPlaceHolder;
    this.btnSubsStepper = btnSubsStepper;
    this.clHeaderLabel = clHeaderLabel;
    this.clHeaderTitle = clHeaderTitle;
    this.clStepper = clStepper;
    this.clSubsRecommended = clSubsRecommended;
    this.clTooltipLayout = clTooltipLayout;
    this.clUserBoughtTooltip = clUserBoughtTooltip;
    this.coordinatorLayout = coordinatorLayout;
    this.doubleStackProductCard = doubleStackProductCard;
    this.faqCategories = faqCategories;
    this.imSubsUserBoughtWithPopup = imSubsUserBoughtWithPopup;
    this.imgPolygonWithPopup = imgPolygonWithPopup;
    this.ivBadge = ivBadge;
    this.ivTitleAlreadyAdded = ivTitleAlreadyAdded;
    this.llDescrip = llDescrip;
    this.mainLayout = mainLayout;
    this.manufacturerDetailsCategories = manufacturerDetailsCategories;
    this.medicineCompanyName = medicineCompanyName;
    this.medicineName = medicineName;
    this.nestedScrollView = nestedScrollView;
    this.pdpBanner = pdpBanner;
    this.pdpFirstFold = pdpFirstFold;
    this.pdpHeader = pdpHeader;
    this.pdpPgIndicator = pdpPgIndicator;
    this.pdpStickyHeader = pdpStickyHeader;
    this.rvAuthorCard = rvAuthorCard;
    this.scrollLayout = scrollLayout;
    this.shimmerViewContainer = shimmerViewContainer;
    this.tmCarts = tmCarts;
    this.tmCompositionCard = tmCompositionCard;
    this.tmDivider = tmDivider;
    this.tmDivider1 = tmDivider1;
    this.tmRecommendedSubstituteUpsell = tmRecommendedSubstituteUpsell;
    this.tmViewComparison = tmViewComparison;
    this.toolbarLayout = toolbarLayout;
    this.tvAlreadyAdded = tvAlreadyAdded;
    this.tvCheaperTag = tvCheaperTag;
    this.tvMRPText = tvMRPText;
    this.tvOrgMedMrp = tvOrgMedMrp;
    this.tvOrgMedSellingPrice = tvOrgMedSellingPrice;
    this.tvOrgPricePerUnit = tvOrgPricePerUnit;
    this.tvOrgRupeeSbl = tvOrgRupeeSbl;
    this.tvPercentOff = tvPercentOff;
    this.tvPricePerUnit = tvPricePerUnit;
    this.tvSubsUserBoughtWithPopup = tvSubsUserBoughtWithPopup;
    this.viewLine = viewLine;
    this.viewLinePdp = viewLinePdp;
  }

  public abstract void setIsSubs(@Nullable Boolean isSubs);

  @Nullable
  public Boolean getIsSubs() {
    return mIsSubs;
  }

  public abstract void setIsSubsFound(@Nullable Boolean isSubsFound);

  @Nullable
  public Boolean getIsSubsFound() {
    return mIsSubsFound;
  }

  public abstract void setIsBottomsheetBehaviour(@Nullable Boolean isBottomsheetBehaviour);

  @Nullable
  public Boolean getIsBottomsheetBehaviour() {
    return mIsBottomsheetBehaviour;
  }

  public abstract void setList(@Nullable List<AuthorCardModel> list);

  @Nullable
  public List<AuthorCardModel> getList() {
    return mList;
  }

  public abstract void setViewModel(@Nullable ProductDetailViewModel viewModel);

  @Nullable
  public ProductDetailViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_product_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentProductDetailBinding>inflateInternal(inflater, R.layout.fragment_product_detail, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentProductDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_product_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentProductDetailBinding>inflateInternal(inflater, R.layout.fragment_product_detail, null, false, component);
  }

  public static FragmentProductDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentProductDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentProductDetailBinding)bind(component, view, R.layout.fragment_product_detail);
  }
}
