// Generated by data binding compiler. Do not edit!
package com.intellihealth.truemeds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.intellihealth.salt.views.TextView;
import com.intellihealth.salt.views.cards.Divider;
import com.intellihealth.salt.views.edittext.InputFieldLayout;
import com.intellihealth.truemeds.R;
import com.intellihealth.truemeds.data.callback.ChooseLocationCallback;
import com.intellihealth.truemeds.presentation.viewmodel.HomeViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class BottomsheetLocationBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout clFooter;

  @NonNull
  public final ConstraintLayout clHeader;

  @NonNull
  public final ConstraintLayout clLocationNudge;

  @NonNull
  public final ConstraintLayout clLoggedOut;

  @NonNull
  public final ConstraintLayout clRoot;

  @NonNull
  public final ConstraintLayout clScrollable;

  @NonNull
  public final Divider dividerLocation;

  @NonNull
  public final InputFieldLayout etInputFieldPinCode;

  @NonNull
  public final Group groupLoggedIn;

  @NonNull
  public final AppCompatImageView imageClose;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final RecyclerView rvSavedAddresses;

  @NonNull
  public final TextView tvCurrentLocation;

  @NonNull
  public final TextView tvHeader;

  @NonNull
  public final TextView tvLoginToView;

  @NonNull
  public final TextView tvManageAddress;

  @NonNull
  public final TextView tvNoSaveAddresses;

  @NonNull
  public final TextView tvSaveAddresses;

  @NonNull
  public final View viewDragHandle;

  @Bindable
  protected Boolean mIsUserLoggedIn;

  @Bindable
  protected ChooseLocationCallback mCallbackLocation;

  @Bindable
  protected HomeViewModel mViewModel;

  protected BottomsheetLocationBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout clFooter, ConstraintLayout clHeader, ConstraintLayout clLocationNudge,
      ConstraintLayout clLoggedOut, ConstraintLayout clRoot, ConstraintLayout clScrollable,
      Divider dividerLocation, InputFieldLayout etInputFieldPinCode, Group groupLoggedIn,
      AppCompatImageView imageClose, NestedScrollView nestedScrollView,
      RecyclerView rvSavedAddresses, TextView tvCurrentLocation, TextView tvHeader,
      TextView tvLoginToView, TextView tvManageAddress, TextView tvNoSaveAddresses,
      TextView tvSaveAddresses, View viewDragHandle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.clFooter = clFooter;
    this.clHeader = clHeader;
    this.clLocationNudge = clLocationNudge;
    this.clLoggedOut = clLoggedOut;
    this.clRoot = clRoot;
    this.clScrollable = clScrollable;
    this.dividerLocation = dividerLocation;
    this.etInputFieldPinCode = etInputFieldPinCode;
    this.groupLoggedIn = groupLoggedIn;
    this.imageClose = imageClose;
    this.nestedScrollView = nestedScrollView;
    this.rvSavedAddresses = rvSavedAddresses;
    this.tvCurrentLocation = tvCurrentLocation;
    this.tvHeader = tvHeader;
    this.tvLoginToView = tvLoginToView;
    this.tvManageAddress = tvManageAddress;
    this.tvNoSaveAddresses = tvNoSaveAddresses;
    this.tvSaveAddresses = tvSaveAddresses;
    this.viewDragHandle = viewDragHandle;
  }

  public abstract void setIsUserLoggedIn(@Nullable Boolean isUserLoggedIn);

  @Nullable
  public Boolean getIsUserLoggedIn() {
    return mIsUserLoggedIn;
  }

  public abstract void setCallbackLocation(@Nullable ChooseLocationCallback callbackLocation);

  @Nullable
  public ChooseLocationCallback getCallbackLocation() {
    return mCallbackLocation;
  }

  public abstract void setViewModel(@Nullable HomeViewModel viewModel);

  @Nullable
  public HomeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static BottomsheetLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.bottomsheet_location, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static BottomsheetLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<BottomsheetLocationBinding>inflateInternal(inflater, R.layout.bottomsheet_location, root, attachToRoot, component);
  }

  @NonNull
  public static BottomsheetLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.bottomsheet_location, null, false, component)
   */
  @NonNull
  @Deprecated
  public static BottomsheetLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<BottomsheetLocationBinding>inflateInternal(inflater, R.layout.bottomsheet_location, null, false, component);
  }

  public static BottomsheetLocationBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static BottomsheetLocationBinding bind(@NonNull View view, @Nullable Object component) {
    return (BottomsheetLocationBinding)bind(component, view, R.layout.bottomsheet_location);
  }
}
