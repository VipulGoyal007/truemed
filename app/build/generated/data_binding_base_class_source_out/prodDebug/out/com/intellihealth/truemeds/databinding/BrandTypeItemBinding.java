// Generated by data binding compiler. Do not edit!
package com.intellihealth.truemeds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.intellihealth.salt.views.CheckFieldLayout;
import com.intellihealth.truemeds.R;
import com.intellihealth.truemeds.presentation.viewmodel.MyOrderViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class BrandTypeItemBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout constraitMain;

  @NonNull
  public final CheckFieldLayout customRadioOrder;

  @Bindable
  protected MyOrderViewModel mViewModel;

  @Bindable
  protected Integer mItemPosition;

  @Bindable
  protected Boolean mSelectedValue;

  protected BrandTypeItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout constraitMain, CheckFieldLayout customRadioOrder) {
    super(_bindingComponent, _root, _localFieldCount);
    this.constraitMain = constraitMain;
    this.customRadioOrder = customRadioOrder;
  }

  public abstract void setViewModel(@Nullable MyOrderViewModel viewModel);

  @Nullable
  public MyOrderViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setItemPosition(@Nullable Integer itemPosition);

  @Nullable
  public Integer getItemPosition() {
    return mItemPosition;
  }

  public abstract void setSelectedValue(@Nullable Boolean selectedValue);

  @Nullable
  public Boolean getSelectedValue() {
    return mSelectedValue;
  }

  @NonNull
  public static BrandTypeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.brand_type_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static BrandTypeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<BrandTypeItemBinding>inflateInternal(inflater, R.layout.brand_type_item, root, attachToRoot, component);
  }

  @NonNull
  public static BrandTypeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.brand_type_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static BrandTypeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<BrandTypeItemBinding>inflateInternal(inflater, R.layout.brand_type_item, null, false, component);
  }

  public static BrandTypeItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static BrandTypeItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (BrandTypeItemBinding)bind(component, view, R.layout.brand_type_item);
  }
}
