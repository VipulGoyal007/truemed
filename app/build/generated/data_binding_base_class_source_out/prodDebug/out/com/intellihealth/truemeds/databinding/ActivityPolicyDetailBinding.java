// Generated by data binding compiler. Do not edit!
package com.intellihealth.truemeds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.intellihealth.salt.views.MobileSectionHeaders;
import com.intellihealth.salt.views.TextView;
import com.intellihealth.truemeds.R;
import com.intellihealth.truemeds.data.model.helpfaqtnc.PrivacyPolicyAndTnCResponse;
import com.intellihealth.truemeds.presentation.viewmodel.PolicyTncViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityPolicyDetailBinding extends ViewDataBinding {
  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView txtApplicableDate;

  @NonNull
  public final TextView txtDetailContent;

  @NonNull
  public final MobileSectionHeaders txtHeader;

  @Bindable
  protected PolicyTncViewModel mViewModel;

  @Bindable
  protected PrivacyPolicyAndTnCResponse.Legal mPrivacyTncData;

  @Bindable
  protected String mDescription;

  protected ActivityPolicyDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ProgressBar progressBar, TextView txtApplicableDate, TextView txtDetailContent,
      MobileSectionHeaders txtHeader) {
    super(_bindingComponent, _root, _localFieldCount);
    this.progressBar = progressBar;
    this.txtApplicableDate = txtApplicableDate;
    this.txtDetailContent = txtDetailContent;
    this.txtHeader = txtHeader;
  }

  public abstract void setViewModel(@Nullable PolicyTncViewModel viewModel);

  @Nullable
  public PolicyTncViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setPrivacyTncData(
      @Nullable PrivacyPolicyAndTnCResponse.Legal privacyTncData);

  @Nullable
  public PrivacyPolicyAndTnCResponse.Legal getPrivacyTncData() {
    return mPrivacyTncData;
  }

  public abstract void setDescription(@Nullable String description);

  @Nullable
  public String getDescription() {
    return mDescription;
  }

  @NonNull
  public static ActivityPolicyDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_policy_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityPolicyDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityPolicyDetailBinding>inflateInternal(inflater, R.layout.activity_policy_detail, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityPolicyDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_policy_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityPolicyDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityPolicyDetailBinding>inflateInternal(inflater, R.layout.activity_policy_detail, null, false, component);
  }

  public static ActivityPolicyDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityPolicyDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityPolicyDetailBinding)bind(component, view, R.layout.activity_policy_detail);
  }
}
